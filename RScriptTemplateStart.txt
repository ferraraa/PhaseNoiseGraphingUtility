remove(list = ls())
library(ggplot2)
library(colorspace)
library(scales)

## Expected User Inputs
xstart = 0.001; # Hz
xstop = 160e6; # Hz
ystart = -190; # dBc/Hz
ystop = 0; # dBc/Hz
ystep = 10; # dBc/Hz
PhaseNoisePlotTitle = "Phase Noise";
smooth_on = 1; # Add smoothed plots
saturation = 0.5; # Only used when Smooth_On is 1
graphwidth = 22;
graphheight = 11;
graphdpi = 80;
axistextsize = 16;
axistextangle = 0;

graphbackground_color = "white"
graphoutline_color = "black"
graphoutline_size = 1;
graphoutline_linetype = "solid"


majorgrid_color = "black"
majorgrid_size = 0.5;
majorgrid_linetype = "solid"


minorgrid_color = "gray"
minorgrid_size = 0.5;
minorgrid_linetype = "solid"




## Function for desaturating colors by specified proportion
desat <- function(cols, sat = 0.5, smooth_on) {
  if (smooth_on) {
    X <- diag(c(1, sat, 1)) %*% rgb2hsv(col2rgb(cols));
  } else {
    X <- diag(c(1, 1, 1)) %*% rgb2hsv(col2rgb(cols));
  }
  
  hsv(X[1, ], X[2, ], X[3, ]);
}

## Function for editing x axis tick mark labels
freq_formatter <- function(x) {
  lab = list();
  
  for (axiscount in seq_along(x)) {
    if (x[axiscount] < 1) {
      labelnum = 1000 * x[axiscount];
      
      labelletter = "m";
      
    } else if (x[axiscount] >= 1 && x[axiscount] < 1e3) {
      labelnum = x[axiscount];
      
      labelletter = "";
      
    } else if (x[axiscount] >= 1000 && x[axiscount] < 1e6) {
      labelnum = x[axiscount] / 1000;
      
      labelletter = "k";
      
    } else if (x[axiscount] >= 1e6) {
      labelnum = x[axiscount] / 1e6;
      
      labelletter = "M";
      
    }
    lab[axiscount] <- sprintf("%d%s", labelnum, labelletter);
    
  }
  
  return(lab);
}

log10_minor_break = function (...){
  function(x) {
    minx         = floor(min(log10(x), na.rm=T))-1;
    maxx         = ceiling(max(log10(x), na.rm=T))+1;
    n_major      = maxx-minx+1;
    major_breaks = seq(minx, maxx, by=1)
    minor_breaks = 
      rep(log10(seq(1, 9, by=1)), times = n_major)+
      rep(major_breaks, each = 9)
    return(10^(minor_breaks))
  }
}
filenames = c(
  file.path(
